# SHELL
alias a='bm -l'
alias gr='grep'
alias ls='ls --color'
alias lls='ls'
alias ll='ls -l'
alias lll='ls -l'
alias edit-aliases='vim ~/.aliases'

# IDE
alias vim='/usr/bin/nvim'
alias nvim='/usr/bin/nvim'
alias vi='vim'
alias vscode='open ~/Applications/Visual\ Studio\ Code.app'

# GIT
alias gs='git status'
alias gt='git tag'
alias gtsm='gts -m'
alias gtd='gt -d'
alias post='gp -u origin HEAD && gp --tags'
alias fetch='gf'
alias pull='gf; gl'
alias back='gco @{-1}'
alias drop='gbd -D @{-1}'
alias gpt='gp --tags'

#GPG
alias encrypt='gpg -e -r ya@hiki.su -r dmitrii@opsworks.ru -r dmitrii@soft-engineering.com -r dmitrii@northlandpositronics.com'

# SSH
alias ssh='ssh -A'

# OpenLens
alias lens='open /Applications/OpenLens.app'

# IaC tool selection mechanism
export CURRENT_TOOL=""

# Function to switch between different IaC tools
use() {
    local tool=$1

    # First, unalias any potentially conflicting commands
    for cmd in init reconfigure migrate-state refresh plan apply deploy destroy knock update purge target upgrade gogogo ggg state show list format validate taint untaint docs lint get version import run console output unlock clean preview up stack; do
        unalias $cmd 2>/dev/null || true
    done

    # Now load the appropriate alias set
    case "$tool" in
        terraform)
            source ~/.aliases-terraform
            [[ -n "$CURRENT_TOOL" ]] && echo "Switched to Terraform aliases"
            export CURRENT_TOOL="terraform"
            ;;
        terragrunt)
            source ~/.aliases-terragrunt
            [[ -n "$CURRENT_TOOL" ]] && echo "Switched to Terragrunt aliases"
            export CURRENT_TOOL="terragrunt"
            ;;
        pulumi)
            source ~/.aliases-pulumi
            [[ -n "$CURRENT_TOOL" ]] && echo "Switched to Pulumi aliases"
            export CURRENT_TOOL="pulumi"
            ;;
        none)
            export CURRENT_TOOL=""
            echo "All IaC tool aliases unloaded"
            ;;
        *)
            echo "Unknown tool: $tool"
            echo "Available options: terraform, terragrunt, pulumi, none"
            return 1
            ;;
    esac
}

# Always ensure we have base tool commands available
alias t='terraform'
alias tg='terragrunt'
alias pl='pulumi'

# Default to terraform aliases (can be changed in .bashrc if needed)
use pulumi

# Kubernetes
alias kubectl='kubectl --context="$KUBECTL_CONTEXT" --namespace="$KUBECTL_NAMESPACE"'
alias dev='k --context dev -n dev'
alias idev='k --context idev -n dev'
alias stage='k --context stage -n stg'
alias testing='k --context qa'
alias ops='k --context ops'
alias prod='k --context prod -n prod'
alias dr='k --context dr -n prod'
alias bench='k --context benchmark'
alias sand='k --context sandbox'
alias ks='k -n kube-system'
alias ka='k apply -f'
alias kd='k describe'
alias kdel='k delete -f'
alias krm='kdel'
alias kg='k get'
alias kgp='kg pod'
alias kgpw='kgp -w'
alias kgd='kg deploy'
alias kgdw='kgd -w'
alias kgsa='kg sa'
alias kgpv='kg pv'
alias kgpvc='kg pvc'
alias kgsc='kg sc'
alias kgn='kg nodes'
alias kdn='kd nodes'
alias kdpv='kd pv'
alias kdpvc='kd pvc'
alias kex='k exec -it'
alias kx='kex'
alias kl='k logs'
alias klf='kl -f'
alias klp='kl --previous'
alias krr='k rollout restart'

# Stern
alias stern='stern --context="$KUBECTL_CONTEXT" --namespace="$KUBECTL_NAMESPACE" --tail 120'
alias plogs='stern --context prod -n prod --tail 20'
alias slogs='stern --context stage -n stg --tail 20'
alias dlogs='stern --context dev -n dev --tail 20'

# Helm
alias helm='helm --kube-context="$KUBECTL_CONTEXT" --namespace="$KUBECTL_NAMESPACE"'

# HuggingFace
alias hf='huggingface-cli'

# Ollama
alias o='ollama'
alias ols='ollama ls'
alias ol='ols'
alias ops='ollama ps'
alias op=ops
alias orun='ollama run'
alias or=orun
alias ostop='ollama stop'
alias os=ostop
alias oshow='ollama show'
alias osh=oshow

# Auxiliary
alias tf='thefuck'
alias scr='screen'
